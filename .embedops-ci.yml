stages:
  - analysis
  - build-development
  - build-release

build-development:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build-development
  script: |
    echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile \
    --destination=$CI_REGISTRY_IMAGE/development:$CI_COMMIT_SHA \
    --label "org.opencontainers.image.revision"="$CI_COMMIT_SHA" --label "org.opencontainers.image.source"="$CI_REPOSITORY_URL" \
    --label "org.opencontainers.image.created"="$(date -I)" --single-snapshot --snapshotMode=time
  except:
    - tags

build-release:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build-release
  script: |
    echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile \
    --destination=$CI_REGISTRY_IMAGE --destination=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG \
    --label "org.opencontainers.image.revision"="$CI_COMMIT_SHA" --label "org.opencontainers.image.source"="$CI_REPOSITORY_URL" \
    --label "org.opencontainers.image.created"="$(date -I)" --single-snapshot --snapshotMode=time
  only:
    - tags

hadolint-report:
  image: hadolint/hadolint:v2.0.0-debian
  script:
    - mkdir -p reports
    - hadolint -f gitlab_codeclimate Dockerfile | tee reports/hadolint-$(md5sum Dockerfile | cut -d" " -f1).json 
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "reports/*"
    paths:
      - "reports/*"
  stage: analysis


